<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<qualifiedTypeNameHistroy>
    <fullyQualifiedTypeName name="org.springframework.kafka.core.KafkaAdmin.NewTopics"/>
    <fullyQualifiedTypeName name="org.apache.kafka.clients.admin.NewTopic"/>
    <fullyQualifiedTypeName name="org.springframework.kafka.config.TopicBuilder"/>
    <fullyQualifiedTypeName name="org.springframework.stereotype.Service"/>
    <fullyQualifiedTypeName name="org.springframework.kafka.core.KafkaTemplate"/>
    <fullyQualifiedTypeName name="com.kafka.deliveryboy.config.AppConstants"/>
    <fullyQualifiedTypeName name="org.springframework.context.annotation.Bean"/>
    <fullyQualifiedTypeName name="org.springframework.web.bind.annotation.RestController"/>
    <fullyQualifiedTypeName name="org.springframework.web.bind.annotation.RequestMapping"/>
    <fullyQualifiedTypeName name="org.springframework.web.bind.annotation.PostMapping"/>
    <fullyQualifiedTypeName name="org.springframework.http.ResponseEntity"/>
    <fullyQualifiedTypeName name="java.util.Map"/>
    <fullyQualifiedTypeName name="org.springframework.http.HttpStatus"/>
    <fullyQualifiedTypeName name="org.springframework.beans.factory.annotation.Autowired"/>
    <fullyQualifiedTypeName name="org.apache.commons.logging.Log"/>
    <fullyQualifiedTypeName name="org.apache.commons.logging.LogFactory"/>
    <fullyQualifiedTypeName name="com.kafka.deliveryboy.service.KafkaService"/>
    <fullyQualifiedTypeName name="org.springframework.context.annotation.Configuration"/>
    <fullyQualifiedTypeName name="org.springframework.kafka.annotation.KafkaListener"/>
    <fullyQualifiedTypeName name="com.kafka.enduser.constants.AppConstants"/>
    <fullyQualifiedTypeName name="org.apache.kafka.clients.producer.Producer"/>
    <fullyQualifiedTypeName name="com.kafka.producertest.HelloProducer"/>
    <fullyQualifiedTypeName name="com.kafka.producertest.config.KafkaConfig"/>
    <fullyQualifiedTypeName name="java.util.Properties"/>
    <fullyQualifiedTypeName name="com.kafka.producertest.producer.AppConfig"/>
    <fullyQualifiedTypeName name="com.kafka.producertest.config.AppConfig"/>
    <fullyQualifiedTypeName name="org.apache.kafka.clients.producer.ProducerConfig"/>
    <fullyQualifiedTypeName name="org.apache.kafka.common.serialization.Serdes.StringSerde"/>
    <fullyQualifiedTypeName name="org.apache.kafka.common.serialization.StringSerializer"/>
    <fullyQualifiedTypeName name="org.apache.kafka.common.serialization.IntegerSerializer"/>
    <fullyQualifiedTypeName name="java.lang.Integer"/>
    <fullyQualifiedTypeName name="org.apache.kafka.clients.producer.KafkaProducer"/>
    <fullyQualifiedTypeName name="org.apache.kafka.clients.producer.ProducerRecord"/>
    <fullyQualifiedTypeName name="org.slf4j.Logger"/>
    <fullyQualifiedTypeName name="org.slf4j.LoggerFactory"/>
    <fullyQualifiedTypeName name="com.kafka.producertest.producer.HelloProducer"/>
    <fullyQualifiedTypeName name="lombok.Setter"/>
    <fullyQualifiedTypeName name="lombok.Getter"/>
    <fullyQualifiedTypeName name="org.springframework.kafka.support.serializer.JsonDeserializer"/>
    <fullyQualifiedTypeName name="org.apache.kafka.common.serialization.Serdes"/>
    <fullyQualifiedTypeName name="lombok.Data"/>
    <fullyQualifiedTypeName name="org.springframework.kafka.annotation.EnableKafka"/>
    <fullyQualifiedTypeName name="org.springframework.kafka.annotation.EnableKafkaStreams"/>
    <fullyQualifiedTypeName name="org.springframework.context.annotation.ComponentScan"/>
    <fullyQualifiedTypeName name="org.apache.kafka.streams.StreamsBuilder"/>
    <fullyQualifiedTypeName name="java.util.Random"/>
    <fullyQualifiedTypeName name="akka.actor.AbstractActor"/>
    <fullyQualifiedTypeName name="java.lang.String"/>
    <fullyQualifiedTypeName name="java.lang.Object"/>
    <fullyQualifiedTypeName name="akka.actor.Props"/>
    <fullyQualifiedTypeName name="akka.actor.ActorSystem"/>
    <fullyQualifiedTypeName name="com.connection.websocket.akkademo.AkkaActorDemo"/>
</qualifiedTypeNameHistroy>
